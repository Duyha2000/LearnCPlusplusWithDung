Exercise 1: Calculate the sum of array elements
Requirement: Ask the user to input an array of integers, then calculate and display the sum of all elements in the array.
Example Input: 1 2 3 4 5
Example Output: sum = 15

 int number;
    int sizeArr;
    cin >> sizeArr;
    int arr[sizeArr]; // Mới khởi tạo array có sizeArray phần tử
    for (int i = 0; i < sizeArr; i++) {
        int numArr;
        cin >> numArr;
        arr[i] = numArr;
    }

    int arr2[] = {1, 2, 3, 4, 5};
    number = sumNumbers(arr, sizeArr);
    int number2 = sumNumbers(arr2, 5);
    cout << number;
    cout << number2;
// void : in, gán lại giá trị
int sumNumbers(int arr[], int sizeArr) {
    int sum = 0;
    // int sum = arr[0] + arr[1] + ... arr[4]
    for (int i = 0; i < sizeArr; i++) {
        sum += arr[i];
    }
    return sum;
}

// Viết function tính tổng các số trong array N phần tử
// Trong main sẽ input các giá trị và gọi hàm

Exercise 2a: Find the largest and smallest elements in an array
Requirement: Ask the user to input an array of integers, then find and display the largest and smallest numbers.
Example Input: 3 4 5 4 5
Example Output: Largest: 5, Smallest: 3

- Step 1: Initialize two variables:
largest to hold the largest number (initially set to a very small value, such as the first element of the array).
smallest to hold the smallest number (initially set to a very large value, such as the first element of the array).

- Step 2: Use a loop to iterate through the array:
Compare each number with largest. If the current number is greater, update largest.
Compare each number with smallest. If the current number is smaller, update smallest.

- Step 3: After the loop ends, the values of largest and smallest will be the largest and smallest elements of the array.

- Step 4: Display the results to the user:
Output: "Largest: [value], Smallest: [value]".

int largestNumber(int arr[], int sizeArr) {
     int largest = arr[0]; // số đầu tiên
     for (int i = 0; i < sizeArr; i++) {
         // không bao giờ sử dụng i nếu bài toán không bắt tìm index(chỉ số)
         if (arr[i] > largest) {
             largest = arr[i];
         }
     }
     // i là chỉ số -> largest = i (chỉ số)
     // trả về số lớn nhất
     return largest;
 }

 int smallestNumber(int arr[], int sizeArr) {
     int smallest = arr[0];
     for (int i = 0; i < sizeArr; i++) {
         if (arr[i] < smallest) {
             smallest = arr[i];
         }
     }
     return smallest;
 }
// Main:
int arr[5] = {1, 2, 3, 4, 5};
int small;
int large;
small = smallestNumber(arr, 5);
cout << small << endl;
large = largestNumber(arr, 5);
cout << large;

Exercise 2b: Sort the array in ascending order
Requirement: Ask the user to input an array of integers, then sort and display the array in ascending order.
Example Input: [2, 9, 6, 6, 7, 8]
Example Output: [2, 6, 6, 7, 8, 9]

//    sort(a,a+n) -> a là tên array, n là số phần tử

//    sort(tests, tests + 5);
    sort(tests, tests + 5, greater<int>());
    cout << tests[0];
    cout << tests[4];
//    for (int number: tests) {
//        cout << number;
//    }

Exercise 3: Print the array in reverse order
Requirement: Ask the user to input an array of integers, then print the array elements in reverse order (from last to first).
Example Input: 2 9 8 7 9
Example Output: 9 7 8 9 2

void reverseNumber(int arr[], int sizeArr) {
    for (int i = 0; i < sizeArr; i++) {
        int number;
        cin >> number;
        arr[i] = number;
    }
    // i = 9 (size - 1) - 3 - 2 - 1 - 0
    //  from 4 - to 0
    // Step: i++ -> condition <= ...
    // Step: i-- -> condition >= ...

    // arr:                  3 5 8 6 4 (size)
    //
    // size:  size - 1
    // index:                0 1 2 3 4 (from 0 -> to 4) i<=4
    // reverse arr:          4 6 8 5 3
    //                       4 3 2 1 0 ( from size - 1 -> 0) i >=0

    // 2 9 0 9 8 2 1 3 9 8 ( size = 10 )
    // 0 1 2 3 4 5 6 7 8 9 ( last index = 9 = size - 1 )

    // vị trí(chỉ số, chỉ mục): index
    // giá trị(value): arr[0], arr[2]
    for (int i = sizeArr - 1; i >= 0; i--) {
        cout << arr[i] << " ";
    }
}
// Main:
int sizeArr = 5;
int arr[sizeArr];
reverseNumber(arr, sizeArr);

Exercise 4: Find the second largest element in an array
Requirement: Ask the user to input an array of integers, then find and display the second largest number.
Example Input: 3 4 5 4 5
Example Output: 4

 int tests[5];

    for (int i = 0; i < 5; i++) {
        int number;
        cin >> number;
        tests[i] = number;
    }
    // B1: Sắp xếp array giảm dần
    // B2: Phần tử lớn nhất là phần tử đầu tiên
    // B3: tìm phần tử nhỏ hơn phần tử đầu, nó sẽ là phần tử lớn thứ 2
    sort(tests, tests + 5, greater<int>());
    // -> 18 10 9 8 1
    int larger2nd = tests[0]; // 18
    for (int number: tests) {
        // so sánh 18 với 10
        if (number < larger2nd) {
            larger2nd = number;
            break;
        }
    }
    cout << larger2nd;


Exercise 5: Count the occurrences of a value in an array
Requirement: Ask the user to input an array of integers and a value. Find and display the number of times the value appears in the array.
Example Input: Array: 3 4 5 3, Value: 3
Example Output: 2

// Function: biến gì thay đổi được sẽ viết vào tham số trong hàm (number)
// Function để xử lý logic (không phải để input)
int occurrences(int arr[], int sizeArr, int number) {
    int count = 0;
    for (int i = 0; i <= sizeArr; i++) {
        if (number == arr[i])
            count++;

    }
    return count;
}

Exercise 6: Insert an element into an array
Requirement: Ask the user to input an array, a position, and a number. Insert the number into the array at the given position. If the position is invalid, display an error.
Example Input:

Array: [3, 5, 6, 7]
Position: 2
Number: 5
Example Output: [3, 5, 5, 6, 7]
Exercise 7: Merge two arrays
Requirement: Ask the user to input two arrays of integers, then merge and display the combined array.
Example Input:

Array 1: [3, 4, 5, 6]
Array 2: [4, 5, 6]
Example Output: [3, 4, 5, 6, 4, 5, 6]
Exercise 8: Delete elements from an array
Part 1: Input an index and delete the element at that position in the array.
Example Input:

Array: [4, 6, 7, 8]
Index to delete: 2
Example Output: [4, 6, 8]
Part 2: Input a value and delete all occurrences of that value in the array.
Example Input:

Array: [5, 6, 7, 6, 6]
Value to delete: 6
Example Output: [5, 7]
Exercise 9: Sort the array in ascending order
Requirement: Ask the user to input an array of integers, then sort and display the array in ascending order.
Example Input: [2, 9, 6, 6, 7, 8]
Example Output: [2, 6, 6, 7, 8, 9]

Exercise 10: Find two numbers in the array whose sum equals a target value
Requirement: Ask the user to input an array of integers and a target value. Find and return two numbers from the array whose sum equals the target value.
Example Input:

Array: [2, 7, 11, 15]
Target: 9
Example Output: [2, 7]
Explanation: 2 + 7 = 9
Exercise 11: Check if the array is monotonic
Requirement: Ask the user to input an array of integers. Determine whether the array is monotonic (entirely non-increasing or non-decreasing).
Example Input: [3, 4, 5, 6, 7]
Example Output: YES

Exercise 12: Count the number of prime numbers in the array
Requirement: Ask the user to input an array of integers. Count and display how many prime numbers exist in the array.
Example Input: Array: [3, 4, 5, 6, 7]
Example Output: 3
Explanation: 3, 5, 7 are prime numbers.

Project:
// Define a prototype for the function that checks numbers larger than a given threshold
void largerThanN(int array[], int sizeArr, int number);

// So sánh các số với số number nhập vào -> nếu lớn hơn thì in ra số đó
// if(arr[0] > number) -> in ra arr[0] (duyệt các số trong mảng)

void largerThanN(int array[], int sizeArr, int number) {
    // Loop through each element in the array
    for (int i = 0; i < sizeArr; i++) {
        // Check if the current element is larger than the specified number
        if (array[i] > number) {
            // Output the elements that are larger than the input number
            cout << array[i] << " ";
        }
    }
}

const int sizeArr = 10; // Size of the array (constant value)
    // Initialize the array with predefined values
    int array[sizeArr] = {30, 20, 50, 2, -1, 44, 3, 12, 90, 32};
    int number; // Variable to store the number entered by the user
    cout << "Enter a number: ";
    cin >> number;
    // Call the function to print numbers larger than the entered value
    largerThanN(array, sizeArr, number);
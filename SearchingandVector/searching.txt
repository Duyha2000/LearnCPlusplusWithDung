int linear_search(int arr[], int size, int X) {
  int pos = -1;

  // Bài toán vị trí: for i (tìm vị trí)
  // Bài toán còn lại, tính toán, in ra các số (for each)
  for (int i = 0; i < size; i++) {
    if (X == arr[i]) {
      pos = i;
      break;
    }
  }
  return pos;
}

int binary_search(int arr[], int size, int X) {
  int left = 0;
  int right = size - 1;
  int pos = -1;

  while (left <= right) {
    int mid = (left + right) / 2;
    if (arr[mid] == X) {
      pos = mid; // 5
      break;
    } else if (X > arr[mid]) {
      left = mid + 1;
    } else {
      right = mid - 1;
    }
  }
  return pos;
}
int arr[] = {1, 3, 5, 8, 8, 10, 12, 15, 16};
//           -  -  - (-)
int X; // 8
cout << "enter x: ";
cin >> X;

int size = sizeof(arr) / sizeof(arr[0]);
int index = binary_search(arr, size, X);
if (index == -1) {
  cout << "NOT IN ARRAY" << endl;
} else {
  cout << "Position: " << index;
}

// while:
// mid = (left + right)/2
// if(arr[mid] == X) return mid
// else if(arr[mid] > X) right = mid - 1
// else: left = mid + 1
// return -1
// In ra các số từ 1 - > 7
void printNumber() {
  for (int i = 1; i <= 7; i++)
    cout << i << " ";
}
// In ra các số từ a - > b (a và b là 2 con số mình input) a = -5 b =4
void printAtoB(int a, int b) {
  for (int i = a; i <= b; i++)
    cout << i << " ";
}

#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

int main() {
  /*
  Bài tập 1: Chèn 1 phần tử vào trong mảng
  Input: arr[size], position, number
  Gợi ý: nếu phần tử position không thỏa mãn in ra -1, nếu position thỏa mãn
  chèn số đó vào vị trí muốn nhập. Ví dụ: 4 [3,5,6,7] position = 2 ; number = 5
  -> [3 5 5 6 7]

  vector<int> vec = {1, 3, 5, 7, 8};
  int pos;
  cout << "pos: ";
  cin >> pos;
  int number;
  cout << "number: ";
  cin >> number;
  if (pos < 0 || pos > vec.size() - 1) {
    cout << pos;
  } else
    vec.insert(vec.begin() + pos, number);
  for (int number : vec) {
    cout << number << " ";


  Bài tập 2:
  1.Nhập 1 mảng, nhập index sẽ xóa phần tử của mảng đấy. Ví dụ: [4,6,7,8], nhập
  indexDel = 2 -> [4,6,8]
  2. Nhập 1 mảng, nhập number Delete sẽ xóa đi số trong mảng đấy. Ví dụ:
  [5,6,7,6,6], nhập numberDel = 6 -> [5,7]
  // erase: v.erase(v.begin()+ i): xóa theo vị trí mong muốn
  // vec2.erase(vec2.begin() + 1);
  */

  /* vector<int> vec = {1, 3, 5, 7, 4};
   int indexDel;
   cout << "INDEX DELETE: ";
   cin >> indexDel;
   vec.erase(vec.begin() + indexDel);
   for (int newVec : vec) {
     cout << newVec << " ";
   }*/

  // for i kết hợp erase để xóa:
  vector<int> vec2 = {1, 2, 4, 5, 5, 5};
  int numberDelete;
  cout << "Number Delete: ";
  cin >> numberDelete;
  // for (int i = 0; i < vec2.size();--) {
  //   if (numberDelete == vec2[i]) {
  //     vec2.erase(vec2.begin() + i);
  //   } else {
  //     i++;
  //   }
  // }
  int i = 0;
  while (i < vec2.size()) {
    if (numberDelete == vec2[i]) {
      vec2.erase(vec2.begin() + i);
    } else {
      i++;
    }
  }

  // 1,  2, 4,    5, 5, 5}
  // 0   1  2    [3]   4  5

  //
  // 1, 2, 4, 5,  5
  //         [3]

  // 1  2 4 5
  for (int newVec2 : vec2) {
    cout << newVec2 << " ";
  }
  return 0;
}
